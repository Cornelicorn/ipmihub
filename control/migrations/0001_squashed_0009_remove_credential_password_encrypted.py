# Generated by Django 4.2.4 on 2024-04-27 09:43

from django.db import migrations, models
import django.db.models.deletion
import uuid


# Functions from the following migrations need manual copying.
# Move them and any dependencies into this file, then update the
# RunPython operations to refer to the local versions:
# control.migrations.0008_decrypt_passwords

class Migration(migrations.Migration):

    replaces = [('control', '0001_initial'), ('control', '0002_powerstatus_timeout'), ('control', '0003_auto_20200915_1854'), ('control', '0004_sensorreading_sensorsetting_sensorstatus'), ('control', '0005_credential_password_unencrypted'), ('control', '0006_rename_password_credential_password_encrypted'), ('control', '0007_rename_password_unencrypted_credential_password'), ('control', '0008_decrypt_passwords'), ('control', '0009_remove_credential_password_encrypted')]

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Credential',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('username', models.CharField(max_length=20)),
                ('priv', models.IntegerField(choices=[(2, 'User'), (3, 'Operator'), (4, 'Administrator')], default=4)),
                ('password', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('ip', models.CharField(blank=True, max_length=45, verbose_name='IP')),
                ('hostname', models.CharField(blank=True, max_length=253)),
                ('port', models.IntegerField(default=623)),
                ('ipC', models.BooleanField(choices=[(True, 'IP'), (False, 'Hostname')], default=True, verbose_name='Connect via IP Address')),
                ('cred', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='control.credential')),
            ],
        ),
        migrations.CreateModel(
            name='PowerStatus',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('time', models.DateTimeField(auto_now=True)),
                ('power_on', models.BooleanField(null=True)),
                ('overload', models.BooleanField(null=True)),
                ('interlock', models.BooleanField(null=True)),
                ('fault', models.BooleanField(null=True)),
                ('control_fault', models.BooleanField(null=True)),
                ('restore_policy', models.IntegerField(null=True)),
                ('last_event', models.CharField(max_length=17, null=True)),
                ('intrusion', models.BooleanField(null=True)),
                ('front_panel_lockout', models.BooleanField(null=True)),
                ('drive_fault', models.BooleanField(null=True)),
                ('cooling_fault', models.BooleanField(null=True)),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='control.host')),
                ('timeout', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-time'],
            },
        ),
        migrations.CreateModel(
            name='SensorStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(auto_now=True)),
                ('timeout', models.BooleanField(default=False)),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='control.host')),
            ],
        ),
        migrations.CreateModel(
            name='SensorSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(auto_now=True)),
                ('sensor_id', models.IntegerField()),
                ('sensor_name', models.CharField(max_length=255)),
                ('thresholds_unr', models.FloatField(null=True)),
                ('thresholds_ucr', models.FloatField(null=True)),
                ('thresholds_unc', models.FloatField(null=True)),
                ('thresholds_lnc', models.FloatField(null=True)),
                ('thresholds_lcr', models.FloatField(null=True)),
                ('thresholds_lnr', models.FloatField(null=True)),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='control.host')),
            ],
            options={
                'ordering': ['-time'],
            },
        ),
        migrations.CreateModel(
            name='SensorReading',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sensor_id', models.IntegerField()),
                ('raw_value', models.IntegerField(null=True)),
                ('value', models.FloatField(null=True)),
                ('state', models.IntegerField(null=True)),
                ('sensor_status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='control.sensorstatus')),
            ],
        ),
    ]
